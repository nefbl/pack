#!/usr/bin/env node

'use strict';

process.title = 'nefbl-server';

let nodejs = require('@hai2007/nodejs');
let readFileSync = require('./tool/readFileSync');
const useLoader = require('./useLoader');

// 首先，获取配置文件
let config = require('./config')(process);

nodejs.server({

    // 端口号
    port: config.devServer.port,

    // 服务器根路径
    contentBase: config.devServer.contentBase,

    // 设置缺省后缀
    suffix: ['.js', '.ts'],

    // 拦截处理
    handler: function (request, response) {

        let filepath;

        // 修改入口为正确的而非打包的
        // by 你好2007 南京 2021年12月6日
        // // 如果请求的文件和打包出口文件一致，地址改为打包入口地址即可
        // if (filepath == config.output.file) filepath = config.entry.file;

        // 如果是导入node_modules的
        if (/\/@module/.test(request.url)) {
            filepath = nodejs.fullPath(request.url.replace(/\/@modules/, './node_modules'), process.cwd());
        }

        // 否则
        else {
            filepath = nodejs.fullPath("./" + request.url, config.devServer.contentBase);
        }

        let temp = useLoader(filepath, config);
        let flag = temp.flag, content = temp.content;

        // 如果是来自node_modules的普通文件
        if (/\/@modules/.test(request.url) && !flag) {

            filepath = nodejs.fullPath(request.url.replace(/\/@modules/, './node_modules'), process.cwd());
            content = readFileSync(filepath);
            flag = true;
        }

        // 如果是被处理的文件
        if (flag) {
            // 写回数据
            response.writeHead(200, {
                'content-type': "application/javascript;charset=utf-8"
            });
            response.write(content.replace(/(import [^'"]*)(['|"])([^./].+)\2/g, '$1$2/@modules/$3$2'));
            response.end();

        }

        return flag;
    }

});
