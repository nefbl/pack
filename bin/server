#!/usr/bin/env node

'use strict';

process.title = 'nefbl-server';

let nodejs = require('@hai2007/nodejs');
let tool = require('@hai2007/tool');
let readFileSync = require('./modules/readFileSync');

// 首先，获取配置文件
let config = require('./config')(process);

nodejs.server({

    // 端口号
    port: config.devServer.port,

    // 服务器根路径
    contentBase: config.devServer.contentBase,

    // 设置缺省后缀
    suffix: ['.js', '.ts'],

    // 拦截处理
    handler: function (request, response) {

        let filepath;

        // 修改入口为正确的而非打包的
        // by 你好2007 南京 2021年12月6日
        // // 如果请求的文件和打包出口文件一致，地址改为打包入口地址即可
        // if (filepath == config.output.file) filepath = config.entry.file;

        // 如果是导入node_modules的
        if (/\/@module/.test(request.url)) {
            filepath = nodejs.fullPath(request.url.replace(/\/@modules/, './node_modules'), process.cwd());
        }

        // 否则
        else {
            filepath = nodejs.fullPath("./" + request.url, config.devServer.contentBase);
        }

        let flag = false, content = "";

        for (let item of config.loader) {
            if (item.test.test(filepath)) {

                let handlers = item.handler;
                content = readFileSync(filepath);

                for (let index = handlers.length; index > 0; index--) {
                    let handler = handlers[index - 1];
                    let handlerFunction = tool.isFunction(handler) ? handler : require(handler);

                    content = handlerFunction.call({

                        // 文件路径
                        filepath

                    }, content);
                }

                flag = true;
                break;
            }
        }

        // 如果是来自node_modules的普通文件
        if (/\/@modules/.test(request.url) && !flag) {

            filepath = nodejs.fullPath(request.url.replace(/\/@modules/, './node_modules'), process.cwd());
            content = readFileSync(filepath);
            flag = true;
        }

        // 如果是被处理的文件
        if (flag) {
            // 写回数据
            response.writeHead(200, {
                'content-type': "application/javascript;charset=utf-8"
            });
            response.write(require('./modules/urlReplace')(content));
            response.end();

        }

        return flag;
    }

});
